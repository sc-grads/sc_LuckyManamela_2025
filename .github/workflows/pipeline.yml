name: SQL Automation Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  setup-sql:
    runs-on: ubuntu-latest

    services:
      mssql:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          ACCEPT_EULA: "Y"
          SA_PASSWORD: "LuckyManamela@$2000"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Wait for SQL Server to be ready
        run: sleep 30

      - name: Install mssql-tools (sqlcmd)
        run: |
          sudo apt-get update
          sudo apt-get install -y curl apt-transport-https gnupg2
          # Add Microsoft package keys
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          # For Ubuntu 22.04 (adjust if needed for other Ubuntu versions)
          curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc

      - name: Run SQL Script to Setup DB and Stored Procedure
        run: |
          sqlcmd -S localhost -U sa -P "LuckyManamela@$2000" -i setup.sql

      - name: Install ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin

      - name: Start ngrok TCP tunnel
        run: |
          # Start ngrok in the background, exposing port 1433
          nohup ngrok tcp 1433 --authtoken ${{ secrets.NGROK_AUTH_TOKEN }} > ngrok.log 2>&1 &
          # Give ngrok a few seconds to initialize
          sleep 5
          # (Optional) Retrieve the public URL:
          # curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url'
          echo "ngrok tunnel started. Check logs to see if you want to parse the public URL."

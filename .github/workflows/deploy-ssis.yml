name: Deploy SSIS Packages

on:
  repository_dispatch:
    types: [deploy_ssis]
  workflow_dispatch:

env:
  SSIS_PACKAGE_NAME: 'TimeSheetMigration 1.dtsx'
  SSIS_FOLDER_NAME: NewDataMigration  # Updated to match the created folder
  SSIS_PROJECT_NAME: Projects/Timesheets/Packages
  SQL_SERVER_NAME: ${{ secrets.SQL_SERVER_NAME }}
  SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
  SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

jobs:
  deploy-ssis:
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure PowerShell execution policy
        run: Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
        shell: powershell

      - name: Install sqlpackage from Local File
        shell: powershell
        run: |
          $zipPath = "C:\actions-runner\sqlpackage-win-x64-en-170.0.94.3.zip"
          if (-not (Test-Path $zipPath)) {
              throw "Local sqlpackage.zip not found at $zipPath"
          }
          $zipSize = (Get-Item $zipPath).Length
          if ($zipSize -lt 5000000) {
              throw "Downloaded file is too small ($zipSize bytes), likely corrupted."
          }
          Expand-Archive -Path $zipPath -DestinationPath "C:\sqlpackage" -Force
          echo "C:\sqlpackage" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Test SQL Server Connectivity
        shell: powershell
        run: |
          $pingResult = Test-Connection -ComputerName ${{ env.SQL_SERVER_NAME }} -Count 4 -Quiet
          if ($pingResult) {
              Write-Output "Ping to ${{ env.SQL_SERVER_NAME }} succeeded"
          } else {
              Write-Error "Ping to ${{ env.SQL_SERVER_NAME }} failed"
              exit 1
          }
          $portTest = Test-NetConnection -ComputerName ${{ env.SQL_SERVER_NAME }} -Port 1433
          if ($portTest.TcpTestSucceeded) {
              Write-Output "Port 1433 is open"
          } else {
              Write-Error "Port 1433 is closed or unreachable"
              exit 1
          }

      - name: Deploy SSIS Package
        shell: powershell
        run: |
          $ispacPath = Join-Path $env:GITHUB_WORKSPACE "HandsOnProjects/TimesheetMigration/TimesheetMigration/bin/Development/TimesheetMigration.ispac"
          if (-not (Test-Path $ispacPath)) {
              throw "SSIS project file not found at $ispacPath"
          }
          $folderName = '${{ env.SSIS_FOLDER_NAME }}'
          $server = '${{ env.SQL_SERVER_NAME }}'
          $username = '${{ env.SQL_USERNAME }}'
          $password = '${{ env.SQL_PASSWORD }}'

          # Deploy SSIS project using sqlpackage
          & sqlpackage /Action:DeployProject `
                      /SourceFile:$ispacPath `
                      /TargetServerName:$server `
                      /TargetUser:$username `
                      /TargetPassword:$password `
                      /p:TargetProjectFolder:$folderName `
                      /p:CreateDeploymentUtility=true `
                      /p:BlockOnPossibleDataLoss=false `
                      /p:AllowIncompatiblePlatform=true
          Write-Output "SSIS project deployed successfully."
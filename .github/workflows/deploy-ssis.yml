name: Deploy SSIS Packages

on:
  repository_dispatch:
    types: [deploy_ssis]
  workflow_dispatch:

env:
  SSIS_ISPAC_NAME: TimesheetMigration.ispac
  SSIS_FOLDER_NAME: TimesheetDataMigration
  SSIS_PROJECT_NAME: Timesheets
  SQL_SERVER_NAME: ${{ secrets.SQL_SERVER_NAME }}
  SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
  SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}

jobs:
  deploy-ssis:
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set PowerShell Execution Policy
        run: Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process -Force
        shell: powershell

      - name: Install SQLCMD
        run: |
          Invoke-WebRequest -Uri "https://github.com/microsoft/go-sqlcmd/releases/download/v1.5.0/sqlcmd-1.5.0-windows-amd64.zip" -OutFile sqlcmd.zip
          Expand-Archive -Path sqlcmd.zip -DestinationPath C:\sqlcmd
          $env:Path += ";C:\sqlcmd"
        shell: powershell

      - name: Deploy SSIS ISPAC File
        run: |
          $ispacPath = "${{ github.workspace }}\HandsOnProjects\TimesheetMigration\TimesheetMigration\${{ env.SSIS_ISPAC_NAME }}"
          if (-not (Test-Path $ispacPath)) { throw "ISPAC file not found at $ispacPath" }
          $sql = @"
          USE SSISDB;
          IF NOT EXISTS (SELECT 1 FROM catalog.folders WHERE name = N'${{ env.SSIS_FOLDER_NAME }}')
              EXEC catalog.create_folder @folder_name = N'${{ env.SSIS_FOLDER_NAME }}';

          DECLARE @project varbinary(max);
          SELECT @project = BulkColumn FROM OPENROWSET(BULK N'$ispacPath', SINGLE_BLOB) AS BinaryData;
          EXEC catalog.deploy_project 
              @folder_name = N'${{ env.SSIS_FOLDER_NAME }}', 
              @project_name = N'${{ env.SSIS_PROJECT_NAME }}', 
              @project_stream = @project;
          "@
          sqlcmd -S "${{ env.SQL_SERVER_NAME }}" -U "${{ env.SQL_USERNAME }}" -P "${{ env.SQL_PASSWORD }}" -Q $sql
        shell: powershell

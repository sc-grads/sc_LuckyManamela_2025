name: Deploy TimesheetDB, SSIS Package, and Run Data Migration

on:
  push:
    branches:
      - main
    paths:
      - 'scripts/**'
      - 'HandsOnProjects/TimesheetMigration/TimesheetMigration/**'
  workflow_dispatch:

env:
  DATABASE_NAME: TimesheetDB
  SSIS_SOURCE_PATH: HandsOnProjects/TimesheetMigration/TimesheetMigration/bin/Development/TimesheetMigration.ispac
  SSIS_DEST_FOLDER: NewDataMigration
  JOB_NAME: RunDataMigrationPackage
  PACKAGE_NAME: DataMigrationFINAL
  SQL_SERVER_NAME: ${{ secrets.SQL_SERVER_NAME }}
  SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
  SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
  SSIS_FOLDER_NAME: NewDataMigration
  SSIS_PROJECT_NAME: TimesheetMigration
  SSIS_PACKAGE_NAME: 'TimeSheetMigration 1.dtsx'

jobs:
  deploy-database:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SQL Server tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg unixodbc-dev
          curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /tmp/microsoft-prod.gpg
          sudo mv /tmp/microsoft-prod.gpg /usr/share/keyrings/microsoft-prod.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/microsoft-prod.gpg] https://packages.microsoft.com/ubuntu/22.04/prod jammy main" | sudo tee /etc/apt/sources.list.d/mssql-tools.list
          sudo apt-get update
          sudo apt-get install -y mssql-tools
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc
        shell: bash

      - name: Execute SQL Script
        run: |
          for attempt in 1 2 3; do
            if /opt/mssql-tools/bin/sqlcmd -b -S "${{ env.SQL_SERVER_NAME }}" -U "${{ env.SQL_USERNAME }}" -P "${{ env.SQL_PASSWORD }}" -N -C -d master -i scripts/TimesheetDB.sql -o output.log; then
              echo "SQL script executed successfully on attempt $attempt."
              cat output.log
              break
            else
              echo "Attempt $attempt failed. Retrying..."
              cat output.log 2>/dev/null || echo "No output.log created"
              [ $attempt -lt 3 ] && sleep 5
            fi
          done
          if [ $attempt -eq 3 ]; then
            echo "All retries failed. Exiting."
            exit 1
          fi
        shell: bash

  deploy-ssis:
    runs-on: [self-hosted, windows]
    needs: deploy-database
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set PowerShell Execution Policy
        run: Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned -Force
        shell: powershell

      - name: Confirm .ispac file exists
        shell: powershell
        run: |
          Write-Output "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
          $ispacPath = Join-Path $env:GITHUB_WORKSPACE "${{ env.SSIS_SOURCE_PATH }}"
          if (Test-Path $ispacPath) {
              Write-Output "Found .ispac file at $ispacPath"
          } else {
              Write-Error "SSIS .ispac file not found at $ispacPath"
              exit 1
          }

      - name: Install sqlpackage from local file
        shell: powershell
        run: |
          $zipPath = "C:\actions-runner\sqlpackage-win-x64-en-170.0.94.3.zip"
          if (-not (Test-Path $zipPath)) {
              throw "Local sqlpackage.zip not found at $zipPath"
          }
          $zipSize = (Get-Item $zipPath).Length
          if ($zipSize -lt 5000000) {
              throw "File too small ($zipSize bytes) â€” likely corrupted."
          }
          Expand-Archive -Path $zipPath -DestinationPath "C:\sqlpackage" -Force
          echo "C:\sqlpackage" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Write-Output "sqlpackage extracted and added to PATH."

      - name: Test SQL Server Connectivity
        shell: powershell
        run: |
          if (Test-Connection -ComputerName "${{ env.SQL_SERVER_NAME }}" -Count 4 -Quiet) {
              Write-Output "Ping to ${{ env.SQL_SERVER_NAME }} succeeded."
          } else {
              Write-Error "Ping failed to ${{ env.SQL_SERVER_NAME }}."
              exit 1
          }

          $portTest = Test-NetConnection -ComputerName "${{ env.SQL_SERVER_NAME }}" -Port 1433
          if ($portTest.TcpTestSucceeded) {
              Write-Output "Port 1433 is open."
          } else {
              Write-Error "Port 1433 is closed or unreachable."
              exit 1
          }

      - name: Deploy SSIS Project to SSISDB using sqlpackage
        shell: powershell
        run: |
          $projectPath = Join-Path $env:GITHUB_WORKSPACE "${{ env.SSIS_SOURCE_PATH }}"
          if (-not (Test-Path $projectPath)) {
              throw "SSIS .ispac file not found at $projectPath"
          }

          & sqlpackage /Action:DeployProject `
                      /SourceFile:$projectPath `
                      /TargetServerName:"${{ env.SQL_SERVER_NAME }}" `
                      /TargetUser:"${{ env.SQL_USERNAME }}" `
                      /TargetPassword:"${{ env.SQL_PASSWORD }}" `
                      /p:TargetProjectFolder="${{ env.SSIS_DEST_FOLDER }}" `
                      /p:CreateDeploymentUtility=true `
                      /p:BlockOnPossibleDataLoss=false `
                      /p:AllowIncompatiblePlatform=true

          Write-Output "SSIS project deployed successfully."
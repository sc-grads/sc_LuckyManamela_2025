name: Deploy TimesheetDB, SSIS Package, and Run Data Migration

on:
  push:
    branches:
      - main
    paths:
      - 'scripts/**'
      - 'HandsOnProjects/Timesheets/**'
      - 'HandsOnProjects/TimesheetMigration/TimesheetMigration/**'
  workflow_dispatch:

env:
  DATABASE_NAME: TimesheetDB
  SSIS_SOURCE_PATH: 'HandsOnProjects/Timesheets/bin/Development/Timesheets.ispac'
  SSIS_DEST_FOLDER: 'NewDataMigration'
  SSIS_PROJECTS_FOLDER: 'Timesheets'
  JOB_NAME: 'RunDataMigrationPackage'
  PACKAGE_NAME: 'DataMigrationFINAL'
  SQL_SERVER_NAME: ${{ secrets.SQL_SERVER_NAME }}
  SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
  SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
  SSIS_FOLDER_NAME: TimesheetDataMigration
  SSIS_PROJECT_NAME: Projects/Timesheets/Packages
  SSIS_PACKAGE_NAME: 'TimeSheetMigration 1.dtsx'

jobs:
  deploy-database:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install mssql-tools
        run: |
          curl -fsSL https://packages.microsoft.com/keys/microsoft.asc | sudo gpg --dearmor -o /usr/share/keyrings/microsoft-prod.gpg
          curl -fsSL https://packages.microsoft.com/config/ubuntu/24.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-tools.list
          sudo apt-get update
          sudo apt-get install -y mssql-tools unixodbc-dev
          echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
          source ~/.bashrc
        shell: bash

      - name: Execute SQL script with retries
        run: |
          for i in 1 2 3; do
            /opt/mssql-tools/bin/sqlcmd -S "${{ env.SQL_SERVER_NAME }}" -U "${{ env.SQL_USERNAME }}" -P "${{ env.SQL_PASSWORD }}" -d master -i scripts/TimesheetDB.sql -b && break || {
              echo "Attempt $i failed, retrying..."
              sleep 5
            }
          done
        shell: bash

      - name: Trigger SSIS deploy workflow
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type":"deploy_ssis"}'

  deploy-ssis-and-run-job:
    runs-on: [self-hosted, windows]
    needs: deploy-database
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure PowerShell execution policy
        run: Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass
        shell: powershell

      - name: Install sqlcmd
        shell: powershell
        run: |
          Invoke-WebRequest -Uri "https://github.com/microsoft/go-sqlcmd/releases/download/v1.8.2/sqlcmd-windows-amd64.zip" -OutFile "sqlcmd.zip"
          Expand-Archive -Path "sqlcmd.zip" -DestinationPath "C:\sqlcmd" -Force
          $env:Path += ";C:\sqlcmd"

      - name: Deploy SSIS Project
        shell: powershell
        run: |
          $ispacPath = Join-Path $env:GITHUB_WORKSPACE ${{ env.SSIS_SOURCE_PATH }}
          if (-not (Test-Path $ispacPath)) {
              Write-Error "ISPAC file not found at $ispacPath"
              exit 1
          }
          $sql = @"
          DECLARE @ispac varbinary(max);
          SELECT @ispac = BulkColumn FROM OPENROWSET(BULK N'$ispacPath', SINGLE_BLOB) AS ProjectBinary;
          EXEC SSISDB.catalog.deploy_project
              @folder_name = N'${{ env.SSIS_DEST_FOLDER }}',
              @project_name = N'${{ env.SSIS_PROJECTS_FOLDER }}',
              @project_stream = @ispac;
          "@
          sqlcmd -S ${{ env.SQL_SERVER_NAME }} -U ${{ env.SQL_USERNAME }} -P "${{ env.SQL_PASSWORD }}" -d SSISDB -Q $sql

      - name: Create SQL Agent Job to run package
        shell: powershell
        run: |
          $jobName = '${{ env.JOB_NAME }}'
          $sql = @"
          IF NOT EXISTS (SELECT * FROM msdb.dbo.sysjobs WHERE name = N'$jobName')
          BEGIN
            EXEC msdb.dbo.sp_add_job @job_name=N'$jobName';
            EXEC msdb.dbo.sp_add_jobstep @job_name=N'$jobName', @step_name=N'Run SSIS Package',
              @subsystem=N'SSIS',
              @command=N'/ISSERVER "\SSISDB\${{ env.SSIS_DEST_FOLDER }}\${{ env.SSIS_PROJECTS_FOLDER }}\${{ env.PACKAGE_NAME }}" /SERVER "${{ env.SQL_SERVER_NAME }}" /REPORT
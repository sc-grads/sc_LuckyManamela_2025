<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/5/2025 2:56:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MANAMELA"
  DTS:CreatorName="MANAMELA\kgali"
  DTS:DTSID="{DC93D855-72CE-47B9-885D-836CBC390CDD}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="TimeSheetMigration"
  DTS:PackageType="5"
  DTS:VersionBuild="100"
  DTS:VersionGUID="{5E6593A2-EE6B-421C-9F97-B818DD557F2C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{6AF47CF8-93D9-4515-81BC-B8BA7077A920}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + @[User::FilePath] + ";Extended Properties=\"Excel 12.0;HDR=YES\";"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\TimeSheets\Karabo\Karabo_Tsaoane_April_FinalWeek.xlsx;Extended Properties=&quot;Excel 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9139836D-29A3-45D5-A257-D0C76DB9EA5A}"
      DTS:ObjectName="LocalHost.TimesheetDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-TimeSheetMigration-{9139836D-29A3-45D5-A257-D0C76DB9EA5A}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{375EFEC6-4D35-40FB-9721-E3CA4F4D00A3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionString">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2E0B230-5788-418C-BFC6-5188E378A0E5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConsultantFolderName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1ADAECF6-C20E-4991-B753-5914FA20A122}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ConsultantName">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28F0D5C3-F2FF-4F81-ABFE-8755422A5DD4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="RIGHT(&#xA;  LEFT(@[User::FilePath], LEN(@[User::FilePath]) - FINDSTRING(REVERSE(@[User::FilePath]), &quot;\\&quot;, 1)),&#xA;  FINDSTRING(REVERSE(LEFT(@[User::FilePath], LEN(@[User::FilePath]) - FINDSTRING(REVERSE(@[User::FilePath]), &quot;\\&quot;, 1))), &quot;\\&quot;, 1) - 1&#xA;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConsultantNameString">
      <DTS:VariableValue
        DTS:DataType="8">Karabo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0FCBC44E-44D8-47C2-A2F6-8D4E9A6EF115}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\TimeSheets\Karabo\Karabo_Tsaoane_April_FinalWeek.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2F37F33-3155-4C75-907F-6FD18FF2AB6A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\TimeSheets</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{91EEEC1A-9F5D-44D5-AB39-09C60D790BEF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SheetName">
      <DTS:VariableValue
        DTS:DataType="8">TimeSheet$</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Loop Through Excel Files"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{E15DF77B-C288-4B2D-8CF5-B86E5BA4E699}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop Through Excel Files">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{A7A74861-2787-489F-8E7B-49FB1A0897B8}"
        DTS:ObjectName="{A7A74861-2787-489F-8E7B-49FB1A0897B8}">
        <DTS:PropertyExpression
          DTS:Name="Directory">"C:\\TimeSheets\\" + @[User::ConsultantFolderName]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\TimeSheets\" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop Through Excel Files\Extract Consultant SheetName"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{7FA70729-6210-48D5-865D-593586B572C0}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Extract Consultant SheetName"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_5f6d77904a854c2cbb449570977081fe"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath"
              ReadWriteVariables="User::SheetName">
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_5f6d77904a854c2cbb449570977081fe")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_5f6d77904a854c2cbb449570977081fe")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f6d77904a854c2cbb449570977081fe.Properties.Settings.get_Default():ST_5f6d77904a854c2cbb449570977081fe.Properties.Sett" +
    "ings")]

namespace ST_5f6d77904a854c2cbb449570977081fe.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion
using System;
using System.Data;
using System.Data.OleDb;
using Microsoft.SqlServer.Dts.Runtime;

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_5f6d77904a854c2cbb449570977081fe
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string filePath = Dts.Variables["User::FilePath"].Value.ToString();
            string connString = "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + filePath + ";Extended Properties=\"Excel 12.0;HDR=YES\";";
            using (OleDbConnection conn = new OleDbConnection(connString))
            {
                conn.Open();
                DataTable dt = conn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                string sheetName = dt.Rows[0]["TABLE_NAME"].ToString();
                Dts.Variables["User::SheetName"].Value = sheetName;
                conn.Close();
            }
            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_5f6d77904a854c2cbb449570977081fe</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_5f6d77904a854c2cbb449570977081fe</msb:DisplayName>
    <msb:ProjectId>{E197C3E8-3010-429A-8D28-C348BDB73D04}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_5f6d77904a854c2cbb449570977081fe.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="ST_5f6d77904a854c2cbb449570977081fe.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{D217562A-179F-4347-AA74-EA5021989DB4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_5f6d77904a854c2cbb449570977081fe</RootNamespace>
    <AssemblyName>ST_5f6d77904a854c2cbb449570977081fe</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f6d77904a854c2cbb449570977081fe.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f6d77904a854c2cbb449570977081fe.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_5f6d77904a854c2cbb449570977081fe.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_5f6d77904a854c2cbb449570977081fe.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_5f6d77904a854c2cbb449570977081fe.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_5f6d77904a854c2cbb449570977081fe.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALcqQmgAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAejAA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACgwAABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAgBAAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABc
MAAAAAAAAEgAAAACAAUAdCEAAPwNAAABAAAAAAAAAHAvAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswAwCdAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKch8AAHAGcn0AAHAoFQAACnMWAAAKCwdvFwAACgd+GAAAChRvGQAACm8aAAAKFm8b
AAAKctMAAHBvHAAACm8UAAAKDAIoEAAACm8RAAAKcukAAHBvEgAACghvHQAACgdvHgAACt4KBywG
B28fAAAK3AIoEAAAChZvIAAACioAAAABEAAAAgA2AFCGAAoAAAAAHgIoIQAACioeAigiAAAKKq5+
AQAABC0ecgkBAHDQAwAAAigjAAAKbyQAAApzJQAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQq
Gn4DAAAEKh4CKCYAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAABIBAAAI34AALQEAAAkBgAAI1N0cmluZ3MAAAAA2AoAAHwBAAAjVVMAVAwAABAAAAAj
R1VJRAAAAGQMAACYAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAJgAAAAUA
AAAGAAAACQAAAAEAAAAmAAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAA
AAAA5QMBAAAAAAAGAIsC7wQGABoD7wQGANcB3AQPAGMFAAAGAAQCaAQGAG4CaAQGAE8CaAQGAAED
aAQGAKsCaAQGAMQCaAQGABsCaAQGADYCUgMKAN8ClAMKAEgBlAMOAIwEPQAGAB0EFgQGALoB3AQG
AO0FFgQGAL8EDwUGAK8EUwQSAIoBzwMSAOsBzwMSAGQBPgQGAJ8B7wQKAL0DlAMWAKwF8wAWALoA
8wAGAG4DFgQOAI8EnAQOAFgAPQAGAGMAFgQOALAAMQAOAHoEMQAOAA8GMQAGAMMAFgQGABMBFgQG
AM8AFgQGABsGaAQAAAAAAQAAAAAAAQABAAEAEAAzBHgAOQABAAEAAAAQABYFcgVJAAEAAwAAARAA
tgVyBV0AAwAHAAMBAADPBQAAQQAEAAoAEQAiBJkAEQA4AZ0AEQBoAKEABgYpAKUAVoC/BagAVoAY
AagAUCAAAAAAhgA5BAYAAQAMIQAAAACGGM8EBgABABQhAAAAAIMYzwQGAAEAHCEAAAAAkwi7BKwA
AQBIIQAAAACTCCABsQABAE8hAAAAAJMILAG2AAEAVyEAAAAAlgj0BbwAAgBeIQAAAACGGM8EBgAC
AGYhAAAAAJEY1QTBAAIAAAABAEwDCQDPBAEAEQDPBAYAGQDPBAoAKQDPBBAAMQDPBBAAOQDPBBAA
QQDPBBAASQDPBBAAUQDPBBAAWQDPBBAAYQDPBBAAaQDPBAYAiQDPBAYAsQDPBBUAwQDPBAYAcQDH
BSIAyQCoBScA0QANBCwA2QA4AzIAkQBsAzYA4QDmBToAeQDPBBAA6QAuBAYA8QChBUEAeQCcAEUA
AQHdBU8ACQENBFUAEQENBFwA2QBCA2EA6QB8AQYAGQGCAQYAyQAABgEAcQDPBAYAkQDPBAYAIQHh
AGYAIQEXBm8AmQDPBHUAuQDPBAYACAAUAI8ACAAYAJQAKQBzAPwALgALANQALgATAN0ALgAbAPwA
LgAjAAUBLgArAC4BLgAzAC4BLgA7AC4BLgBDAAUBLgBLADQBLgBTAC4BLgBbAEsBQwBjAJQASQBz
APwAYQB7AJQAYwBrAJQAGwADAAEABAADAAAAvwTFAAAAQAHKAAAA+AXPAAIABAADAAIABQAFAAEA
BgAFAAIABwAHAASAAAABAAAASCSrCwAAAAAAAHgAAAAEAAAAAAAAAAAAAAB9AE8AAAAAABAAAAAA
AAAAAAAAAIYAdQMAAAAABAAAAAAAAAAAAAAAfQAxAAAAAAAEAAAAAAAAAAAAAAB9ABYEAAAAABAA
AAAAAAAAAAAAAIYACgAAAAAAAAAAAAEAAAAgBQAABQACAAAAADxNb2R1bGU+AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9sZURi
AG1zY29ybGliAE9sZURiU2NoZW1hR3VpZABkZWZhdWx0SW5zdGFuY2UAU1RfNWY2ZDc3OTA0YTg1
NGMyY2JiNDQ5NTcwOTc3MDgxZmUAR2V0T2xlRGJTY2hlbWFUYWJsZQBEYXRhVGFibGUAVmFyaWFi
bGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1
bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNh
dGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBp
bGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdn
YWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJp
YnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
QXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1
dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1
dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0
cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJp
YnV0ZQBnZXRfVmFsdWUAc2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcA
VG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNUXzVmNmQ3NzkwNGE4NTRjMmNiYjQ0OTU3MDk3NzA4MWZlLmRsbABnZXRfSXRlbQBT
eXN0ZW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRp
b24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rp
b24AT2xlRGJDb25uZWN0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBnZXRfUmVz
b3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzVmNmQ3NzkwNGE4NTRjMmNi
YjQ0OTU3MDk3NzA4MWZlLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTVF81ZjZkNzc5MDRhODU0YzJjYmI0NDk1NzA5NzcwODFmZS5Qcm9wZXJ0aWVzAFRhYmxl
cwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdl
dF9Sb3dzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQAc2V0X1Rhc2tSZXN1bHQARGF0YVJvdwBn
ZXRfQXNzZW1ibHkAAB1VAHMAZQByADoAOgBGAGkAbABlAFAAYQB0AGgAAF1QAHIAbwB2AGkAZABl
AHIAPQBNAGkAYwByAG8AcwBvAGYAdAAuAEEAQwBFAC4ATwBMAEUARABCAC4AMQAyAC4AMAA7AEQA
YQB0AGEAIABTAG8AdQByAGMAZQA9AABVOwBFAHgAdABlAG4AZABlAGQAIABQAHIAbwBwAGUAcgB0
AGkAZQBzAD0AIgBFAHgAYwBlAGwAIAAxADIALgAwADsASABEAFIAPQBZAEUAUwAiADsAABVUAEEA
QgBMAEUAXwBOAEEATQBFAAAfVQBzAGUAcgA6ADoAUwBoAGUAZQB0AE4AYQBtAGUAAHFTAFQAXwA1
AGYANgBkADcANwA5ADAANABhADgANQA0AGMAMgBjAGIAYgA0ADQAOQA1ADcAMAA5ADcANwAwADgA
MQBmAGUALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAACGHod22d95
QZs5vr4+Q3azAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFVBgcDDhI9DgQgABJlBCAAEmkFIAES
bRwDIAAcAyAADgYAAw4ODg4DBhF9CSACEoCBEX0dHAUgABKAhQYgARKAiQgEIAEcDgQgAQEcCAAB
EoCREYCVBSAAEoCZByACAQ4SgJkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSTQMGElED
BhIQAgYIAwYRFAQAABJNBAAAElEFAAEBElEEAAASEAMAAAEECAASTQQIABJRBAgAEhAIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzVmNmQ3Nzkw
NGE4NTRjMmNiYjQ0OTU3MDk3NzA4MWZlAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAEkB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5F
VCBGcmFtZXdvcmsgNC43AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFAwAAAAAAAAAAAAAGowAAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABcMAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAEAQAAAAAAAAAAAAAEAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAKsLSCQAAAEAqwtIJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBHADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAEwDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBUAF8ANQBmADYAZAA3ADcAOQAwADQAYQA4ADUANABjADIAYwBiAGIANAA0ADkANQA3ADAA
OQA3ADcAMAA4ADEAZgBlAAAAPAAOAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADkAMgA4ADgALgAyADkAOAA3AAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwA1AGYANgBkADcANwA5ADAANABhADgANQA0AGMAMgBjAGIAYgA0ADQAOQA1ADcAMAA5ADcANwAw
ADgAMQBmAGUALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfADUAZgA2AGQANwA3ADkAMAA0AGEAOAA1ADQAYwAyAGMAYgBiADQANAA5ADUANwAw
ADkANwA3ADAAOAAxAGYAZQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwA1AGYANgBkADcANwA5ADAANABhADgANQA0AGMAMgBjAGIAYgA0ADQAOQA1ADcAMAA5
ADcANwAwADgAMQBmAGUAAABAAA4AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADkAMgA4ADgALgAyADkAOAA3AAAARAAOAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4AOQAyADgAOAAuADIAOQA4ADcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHwwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop Through Excel Files\MigratingTimeSheet"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6B233A12-B6E3-4A97-BD23-9ABF8EF1B9A9}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="MigratingTimeSheet"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[HeaderOrInvalidRows]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="HeaderOrInvalidRows"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]}) || [ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]}) || [ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(Date) || ISNULL([Total Hours]) || ISNULL(Client)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[ValidRows]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ValidRows"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">![ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]}) &amp;&amp; ![ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]}) &amp;&amp; ![ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">!ISNULL(Date) &amp;&amp; !ISNULL([Total Hours]) &amp;&amp; !ISNULL(Client)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIME)([RIGHT]("0" + (DT_WSTR,2)(([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}) * 60 + [DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}) - ([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}) * 60 + [DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}))) / 60),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)(([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}) * 60 + [DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}) - ([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}) * 60 + [DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}))) % 60),2) + ":00")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIME)(RIGHT("0" + (DT_WSTR,2)((DATEPART("hh",EndTime) * 60 + DATEPART("mi",EndTime) - (DATEPART("hh",StartTime) * 60 + DATEPART("mi",StartTime))) / 60),2) + ":" + RIGHT("0" + (DT_WSTR,2)((DATEPART("hh",EndTime) * 60 + DATEPART("mi",EndTime) - (DATEPART("hh",StartTime) * 60 + DATEPART("mi",StartTime))) % 60),2) + ":00")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input].Columns[StartTime]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          name="StartTime"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIME)((DT_STR,8,1252)[RIGHT]("0" + (DT_WSTR,2)([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]})),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)([DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]})),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)([DATEPART]("ss",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]})),2))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIME)((DT_STR,8,1252)RIGHT("0" + (DT_WSTR,2)(DATEPART("hh",StartTime)),2) + ":" + RIGHT("0" + (DT_WSTR,2)(DATEPART("mi",StartTime)),2) + ":" + RIGHT("0" + (DT_WSTR,2)(DATEPART("ss",StartTime)),2))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input].Columns[EndTime]"
                          cachedDataType="date"
                          cachedName="End Time"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          name="EndTime"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIME)((DT_STR,8,1252)[RIGHT]("0" + (DT_WSTR,2)([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]})),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)([DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]})),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)([DATEPART]("ss",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]})),2))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIME)((DT_STR,8,1252)RIGHT("0" + (DT_WSTR,2)(DATEPART("hh",EndTime)),2) + ":" + RIGHT("0" + (DT_WSTR,2)(DATEPART("mi",EndTime)),2) + ":" + RIGHT("0" + (DT_WSTR,2)(DATEPART("ss",EndTime)),2))</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]"
                          name="ConsultantName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)@[User::ConsultantNameString]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)@[User::ConsultantNameString]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Timesheet</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable">User::SheetName</property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [May$A8:J]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          name="D of Week"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          name="Client"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          name="Client Project Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          length="4000"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          name="Total Hours"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          name="Start Time"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          name="End Time"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          dataType="wstr"
                          length="255"
                          name="D of Week" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          dataType="wstr"
                          length="255"
                          name="Client" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          name="Client Project Name" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          name="Billable or Non Billable" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          dataType="nText"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          dataType="date"
                          name="Total Hours" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          dataType="date"
                          name="Start Time" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          dataType="date"
                          name="End Time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          dataType="nText"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="LookupCient"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT ClientID, ClientName FROM Client</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT ClientID, ClientName FROM Client) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Inputs[Lookup Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Match Output].Columns[ClientIDLookup]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Match Output].Columns[ClientIDLookup]"
                          name="ClientIDLookup"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ClientID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="LookupConsutant"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT ConsultantID, ConsultantName FROM Consultant</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT ConsultantID, ConsultantName FROM Consultant) [refTable]
where [refTable].[ConsultantName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ConsultantID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ConsultantName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Inputs[Lookup Input].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ConsultantName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Match Output].Columns[ConsultantIDLookup]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Match Output].Columns[ConsultantIDLookup]"
                          name="ConsultantIDLookup"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ConsultantID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Timesheet]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsultantIDLookup]"
                          cachedDataType="i4"
                          cachedName="ConsultantIDLookup"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Match Output].Columns[ConsultantIDLookup]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientIDLookup]"
                          cachedDataType="i4"
                          cachedName="ClientIDLookup"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Match Output].Columns[ClientIDLookup]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntryDate]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BillableStatus]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TimesheetID]"
                          dataType="i4"
                          name="TimesheetID" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntryDate]"
                          dataType="dbDate"
                          name="EntryDate" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          dataType="wstr"
                          length="10"
                          name="DayOfWeek" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          dataType="wstr"
                          length="500"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BillableStatus]"
                          dataType="wstr"
                          length="20"
                          name="BillableStatus" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="1000"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          dataType="dbTime2"
                          name="TotalHours"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          dataType="dbTime2"
                          name="StartTime"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          dataType="dbTime2"
                          name="EndTime"
                          scale="7" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Derived Column Output]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Excel Source Output]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Lookup Match Output]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Lookup Match Output1]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup Match Output"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[ValidRows]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant.Inputs[Lookup Input]"
                  name="ValidRows"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[ValidRows]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop Through Excel Files.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{A833C80E-1BE9-4182-BD56-A1AF9B796788}"
          DTS:From="Package\Loop Through Excel Files\Extract Consultant SheetName"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop Through Excel Files\MigratingTimeSheet" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{1684AE1F-2893-4A8A-B1C0-2177FC87A496}"
          DTS:ObjectName="{1684AE1F-2893-4A8A-B1C0-2177FC87A496}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FilePath" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{060413F8-A6D4-49B3-A5C1-5D7A1665A937}"
          DTS:ObjectName="{060413F8-A6D4-49B3-A5C1-5D7A1665A937}"
          DTS:ValueIndex="1"
          DTS:VariableName="User::FolderPath" />
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{AFF3C55E-DBB5-4FF7-9CD3-C12FFF2A888D}"
          DTS:ObjectName="{AFF3C55E-DBB5-4FF7-9CD3-C12FFF2A888D}"
          DTS:ValueIndex="2"
          DTS:VariableName="User::SheetName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="220.8,41.6"
          Id="Package\Loop Through Excel Files\Extract Consultant SheetName"
          TopLeft="28.7333268678854,111.066665087673" />
        <NodeLayout
          Size="172,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet"
          TopLeft="53.0999919409552,187.33333093471" />
        <EdgeLayout
          Id="Package\Loop Through Excel Files.PrecedenceConstraints[Constraint]"
          TopLeft="139.11665940442,152.666665087673">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.6666658470369"
              Start="0,0"
              End="0,27.1666658470369">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.1666658470369" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="258.4,284"
          Size="258.4,327.2"
          Id="Package\Loop Through Excel Files"
          TopLeft="119.166660155688,78.3333344964852" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="136.8,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient"
          TopLeft="340.666668477985,144.733330363896" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination"
          TopLeft="151.000004306435,266.666662038697" />
        <NodeLayout
          Size="160,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant"
          TopLeft="42.3000253294893,160.466666369372" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column"
          TopLeft="204.666652424468,31.1333320360056" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split"
          TopLeft="393.33330925968,45.7999986563129" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source"
          TopLeft="44.1666642535065,38.1333330681589" />
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Derived Column Output]"
          TopLeft="357.466652424468,51.9333320360056">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35.8666568352122,14.6666666203073"
              Start="0,0"
              End="28.3666568352122,14.6666666203073">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="13.9333284176061,0" />
                  <mssgle:CubicBezierSegment
                    Point1="13.9333284176061,0"
                    Point2="17.9333284176061,0"
                    Point3="17.9333284176061,4" />
                  <mssgle:LineSegment
                    End="17.9333284176061,10.6666666203073" />
                  <mssgle:CubicBezierSegment
                    Point1="17.9333284176061,10.6666666203073"
                    Point2="17.9333284176061,14.6666666203073"
                    Point3="21.9333284176061,14.6666666203073" />
                  <mssgle:LineSegment
                    End="28.3666568352122,14.6666666203073" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[ValidRows]"
          TopLeft="470.13330925968,87.3999986563129">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-347.833283930191,73.0666677130596"
              Start="0,0"
              End="-347.833283930191,65.5666677130596">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5333338565298" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.5333338565298"
                    Point2="0,36.5333338565298"
                    Point3="-4,36.5333338565298" />
                  <mssgle:LineSegment
                    End="-343.833283930191,36.5333338565298" />
                  <mssgle:CubicBezierSegment
                    Point1="-343.833283930191,36.5333338565298"
                    Point2="-347.833283930191,36.5333338565298"
                    Point3="-347.833283930191,40.5333338565298" />
                  <mssgle:LineSegment
                    End="-347.833283930191,65.5666677130596" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-197.267403683845,41.5333338565298,46.7015234375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Lookup Match Output1]"
          TopLeft="409.066668477985,186.333330363896">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-172.46666417155,80.3333316748015"
              Start="0,0"
              End="-172.46666417155,72.8333316748015">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.1666658374008" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.1666658374008"
                    Point2="0,40.1666658374008"
                    Point3="-4,40.1666658374008" />
                  <mssgle:LineSegment
                    End="-168.46666417155,40.1666658374008" />
                  <mssgle:CubicBezierSegment
                    Point1="-168.46666417155,40.1666658374008"
                    Point2="-172.46666417155,40.1666658374008"
                    Point3="-172.46666417155,44.1666658374008" />
                  <mssgle:LineSegment
                    End="-172.46666417155,72.8333316748015" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-143.293371148275,45.1666658374008,114.120078125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Lookup Match Output]"
          TopLeft="202.300025329489,181.266666369372">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="138.366643148496,-15.7333360054766"
              Start="0,0"
              End="130.866643148496,-15.7333360054766">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="65.1833215742479,0" />
                  <mssgle:CubicBezierSegment
                    Point1="65.1833215742479,0"
                    Point2="69.1833215742479,0"
                    Point3="69.1833215742479,-4" />
                  <mssgle:LineSegment
                    End="69.1833215742479,-11.7333360054766" />
                  <mssgle:CubicBezierSegment
                    Point1="69.1833215742479,-11.7333360054766"
                    Point2="69.1833215742479,-15.7333360054766"
                    Point3="73.1833215742479,-15.7333360054766" />
                  <mssgle:LineSegment
                    End="130.866643148496,-15.7333360054766" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="20.9919348554979,1,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Excel Source Output]"
          TopLeft="114.166664253507,79.7333330681589">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="142.766654837628,-7.00000103215332"
              Start="0,0"
              End="142.766654837628,0.499998967846679">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.5"
                    Point2="0,22.5"
                    Point3="4,22.5" />
                  <mssgle:LineSegment
                    End="138.766654837628,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="138.766654837628,22.5"
                    Point2="142.766654837628,22.5"
                    Point3="142.766654837628,18.5" />
                  <mssgle:LineSegment
                    End="142.766654837628,0.499998967846679" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet\LookupCient">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet\LookupConsutant">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>
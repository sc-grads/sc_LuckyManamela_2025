<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/5/2025 2:56:59 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MANAMELA"
  DTS:CreatorName="MANAMELA\kgali"
  DTS:DTSID="{DC93D855-72CE-47B9-885D-836CBC390CDD}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.2"
  DTS:LocaleID="1033"
  DTS:ObjectName="TimeSheetMigration"
  DTS:PackageType="5"
  DTS:VersionBuild="170"
  DTS:VersionGUID="{A0CB1704-BFA4-44CB-A724-AA71727BCB7B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{51CA2339-8417-45D4-A713-65E1838D4D73}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::FilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\TimeSheets\Karabo\Karabo_Tsaoane_April_FinalWeek.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{B14E00F5-739B-4371-BA81-BA7A52E235D6}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\TimeSheets\Karabo\Karabo_Tsaoane_April_FinalWeek.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1 1]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{BA88868F-88BF-413B-A15C-6EE6C37031AE}"
      DTS:ObjectName="Excel Connection Manager 1 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\TimeSheets\Karabo\Karabo_Tsaoane_May_FinalWeek.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 2]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{9CE7B3B2-E00A-4CA2-BD48-D52282A5087F}"
      DTS:ObjectName="Excel Connection Manager 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\TimeSheets\Karabo\Karabo_Tsaoane_April_FinalWeek.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 3]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{F436F1D5-2C72-4AF6-9E54-8D45ACE2912E}"
      DTS:ObjectName="Excel Connection Manager 3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.16.0;Data Source=C:\TimeSheets\Karabo\Karabo_Tsaoane_April_FinalWeek.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=NO&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{9139836D-29A3-45D5-A257-D0C76DB9EA5A}"
      DTS:ObjectName="LocalHost.TimesheetDB">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-TimeSheetMigration-{9139836D-29A3-45D5-A257-D0C76DB9EA5A}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 1]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{DCC35DE3-53F1-44BD-90F7-0131CDDFEECD}"
      DTS:ObjectName="LocalHost.TimesheetDB 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-TimeSheetMigration-{DCC35DE3-53F1-44BD-90F7-0131CDDFEECD}LocalHost.TimesheetDB 1;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 2]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{98AA5AD2-21B8-42C5-B4C7-EF70045DF4D5}"
      DTS:ObjectName="LocalHost.TimesheetDB 2">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-ExtractingClientIformation-{98AA5AD2-21B8-42C5-B4C7-EF70045DF4D5}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 3]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{1E2397B1-65B7-4727-B88B-17CDFFD31A42}"
      DTS:ObjectName="LocalHost.TimesheetDB 3">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-Package-{1E2397B1-65B7-4727-B88B-17CDFFD31A42}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[LocalHost.TimesheetDB 4]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{2B494B2A-A883-40C5-837B-411699CE4581}"
      DTS:ObjectName="LocalHost.TimesheetDB 4">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=.;Initial Catalog=TimesheetDB;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-ImportLeave-{2B494B2A-A883-40C5-837B-411699CE4581}LocalHost.TimesheetDB;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{375EFEC6-4D35-40FB-9721-E3CA4F4D00A3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnectionString">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2E0B230-5788-418C-BFC6-5188E378A0E5}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConsultantFolderName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1ADAECF6-C20E-4991-B753-5914FA20A122}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ConsultantName">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28F0D5C3-F2FF-4F81-ABFE-8755422A5DD4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="RIGHT(&#xA;  LEFT(@[User::FilePath], LEN(@[User::FilePath]) - FINDSTRING(REVERSE(@[User::FilePath]), &quot;\\&quot;, 1)),&#xA;  FINDSTRING(REVERSE(LEFT(@[User::FilePath], LEN(@[User::FilePath]) - FINDSTRING(REVERSE(@[User::FilePath]), &quot;\\&quot;, 1))), &quot;\\&quot;, 1) - 1&#xA;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConsultantNameString">
      <DTS:VariableValue
        DTS:DataType="8">Karabo</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0FCBC44E-44D8-47C2-A2F6-8D4E9A6EF115}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\TimeSheets\Karabo\Karabo_Tsaoane_April_FinalWeek.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2F37F33-3155-4C75-907F-6FD18FF2AB6A}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FolderPath">
      <DTS:VariableValue
        DTS:DataType="8">C:\TimeSheets</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{91EEEC1A-9F5D-44D5-AB39-09C60D790BEF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SheetName">
      <DTS:VariableValue
        DTS:DataType="8">Timesheet$</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Loop Through Excel Files"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{E15DF77B-C288-4B2D-8CF5-B86E5BA4E699}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Loop Through Excel Files">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{A7A74861-2787-489F-8E7B-49FB1A0897B8}"
        DTS:ObjectName="{A7A74861-2787-489F-8E7B-49FB1A0897B8}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\TimeSheets\" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{f7111f54-dfa7-4d75-b196-206be2aa6adf}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task Leave TBL"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Inputs[Conditional Split Input].Columns[Start Date]"
                          cachedDataType="date"
                          cachedName="Start Date"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Inputs[Conditional Split Input].Columns[End Date]"
                          cachedDataType="date"
                          cachedName="End Date"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[End Date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Outputs[Case 1]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Case 1"
                      synchronousInputId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">![ISNULL](#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}) &amp;&amp; ![ISNULL](#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[End Date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">!ISNULL([Start Date]) &amp;&amp; !ISNULL([End Date])</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]"
                          name="ConsultantName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)@[User::ConsultantNameString]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)@[User::ConsultantNameString]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Leave$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Leave$A10:Z]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 2]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 2]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]"
                          name="Type of Leave"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Start Date]"
                          name="Start Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[End Date]"
                          name="End Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]"
                          name="Number of days "
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]"
                          name="Approval Obtained"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]"
                          name="Sick Note"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          name="Type of Leave" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Date]"
                          dataType="date"
                          name="Start Date" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Date]"
                          dataType="date"
                          name="End Date" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Number of days ]"
                          dataType="r8"
                          name="Number of days " />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          name="Approval Obtained" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          name="Sick Note" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Type of Leave]"
                          name="Type of Leave" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Start Date]"
                          name="Start Date" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[End Date]"
                          name="End Date" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          dataType="r8"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Number of days ]"
                          name="Number of days " />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Approval Obtained]"
                          name="Approval Obtained" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[Sick Note]"
                          name="Sick Note" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant"
                  componentClassID="Microsoft.FuzzyLookup"
                  contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
                  name="Fuzzy Lookup Consultant"
                  version="5">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                      name="MatchIndexOptions"
                      typeConverter="tcMatchIndexOptions">1</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                      expressionType="Notify"
                      name="MaxMemoryUsage" />
                    <property
                      dataType="System.Null"
                      description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                      name="MatchIndexName"
                      state="escaped" />
                    <property
                      dataType="System.String"
                      description="Specifies the name of the reference table or view against which to match incoming records."
                      name="ReferenceTableName"
                      state="escaped">_x005B_dbo_x005D_._x005B_Consultant_x005D_</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                      name="DropExistingMatchIndex">1</property>
                    <property
                      dataType="System.Int32"
                      description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                      name="CopyReferenceTable">1</property>
                    <property
                      dataType="System.UInt32"
                      description="Specifies the maximum number of fuzzy matches to return for an input record."
                      name="MaxOutputMatchesPerInput">1</property>
                    <property
                      dataType="System.Single"
                      description="Specifies the minimum similarity score required for the match results that the transformation returns."
                      name="MinSimilarity">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                      name="Delimiters"
                      state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                    <property
                      dataType="System.String"
                      description="Specifies the metadata of the reference table in XML format."
                      name="ReferenceMetadataXml"
                      state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_Email_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_LineManager_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_AddressDuringLeave_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_500_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_PhoneDuringLeave_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_50_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                      name="Exhaustive">false</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                      name="WarmCaches">true</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB 4]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB 4]"
                      description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input]"
                      name="Fuzzy Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Start Date]"
                          cachedDataType="date"
                          cachedName="Start Date"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Start Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[End Date]"
                          cachedDataType="date"
                          cachedName="End Date"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[End Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Number of days ]"
                          cachedDataType="r8"
                          cachedName="Number of days "
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Sick Note]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Sick Note"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped">ConsultantName</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output]"
                      name="Fuzzy Lookup Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]"
                          name="Type of Leave">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Type of Leave]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Start Date]"
                          name="Start Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Start Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[End Date]"
                          name="End Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[End Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                          dataType="r8"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Number of days]"
                          name="Number of days">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Number of days ]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]"
                          name="Approval Obtained">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Approval Obtained]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Sick Note]"
                          name="Sick Note">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output].Columns[Sick Note]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          name="ConsultantName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          name="ConsultantID">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">ConsultantID</property>
                            <property
                              containsID="true"
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          name="_Similarity">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          name="_Confidence">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Similarity_ConsultantName]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;ConsultantName&quot;."
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Similarity_ConsultantName]"
                          name="_Similarity_ConsultantName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">3</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Leave]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB 4]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB 4]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Type of Leave]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type of Leave"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Type of Leave]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Start Date]"
                          cachedDataType="date"
                          cachedName="Start Date"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Start Date]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[End Date]"
                          cachedDataType="date"
                          cachedName="End Date"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[End Date]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Number of days]"
                          cachedDataType="r8"
                          cachedName="Number of days"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Number of days]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Approval Obtained]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Approval Obtained"
                          externalMetadataColumnId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Approval Obtained]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveID]"
                          dataType="i4"
                          name="LeaveID" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                          dataType="wstr"
                          length="50"
                          name="TypeOfLeave" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          dataType="dbDate"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          dataType="dbDate"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          dataType="numeric"
                          name="NumberOfDays"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          dataType="wstr"
                          length="50"
                          name="ApprovalObtained" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNote]"
                          dataType="wstr"
                          length="20"
                          name="SickNote" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="1000"
                          name="Comments" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL.Paths[Case 1]"
                  endId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Inputs[Derived Column Input]"
                  name="Case 1"
                  startId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Outputs[Case 1]" />
                <path
                  refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL.Paths[Derived Column Output]"
                  endId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input]"
                  name="Derived Column Output"
                  startId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL.Paths[Excel Source Output]"
                  endId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split.Inputs[Conditional Split Input]"
                  name="Excel Source Output"
                  startId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Loop Through Excel Files\Data Flow Task Leave TBL.Paths[Fuzzy Lookup Output]"
                  endId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Fuzzy Lookup Output"
                  startId="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop Through Excel Files\MigratingTimeSheet"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{6B233A12-B6E3-4A97-BD23-9ABF8EF1B9A9}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="MigratingTimeSheet"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[HeaderOrInvalidRows]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="HeaderOrInvalidRows"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]}) || [ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]}) || [ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">ISNULL(Date) || ISNULL([Total Hours]) || ISNULL(Client)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[ValidRows]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ValidRows"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">![ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]}) &amp;&amp; ![ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]}) &amp;&amp; ![ISNULL](#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">!ISNULL(Date) &amp;&amp; !ISNULL([Total Hours]) &amp;&amp; !ISNULL(Client)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">1</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">([RIGHT]("0" + (DT_WSTR,2)(([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}) * 60 + [DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}) - ([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}) * 60 + [DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}))) / 60),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)(([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}) * 60 + [DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}) - ([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}) * 60 + [DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}))) % 60),2) + ":00")</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(RIGHT("0" + (DT_WSTR,2)((DATEPART("hh",EndTime) * 60 + DATEPART("mi",EndTime) - (DATEPART("hh",StartTime) * 60 + DATEPART("mi",StartTime))) / 60),2) + ":" + RIGHT("0" + (DT_WSTR,2)((DATEPART("hh",EndTime) * 60 + DATEPART("mi",EndTime) - (DATEPART("hh",StartTime) * 60 + DATEPART("mi",StartTime))) % 60),2) + ":00")</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input].Columns[StartTime]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          name="StartTime"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">((DT_STR,8,1252)[RIGHT]("0" + (DT_WSTR,2)([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]})),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)([DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]})),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)([DATEPART]("ss",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]})),2))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">((DT_STR,8,1252)RIGHT("0" + (DT_WSTR,2)(DATEPART("hh",StartTime)),2) + ":" + RIGHT("0" + (DT_WSTR,2)(DATEPART("mi",StartTime)),2) + ":" + RIGHT("0" + (DT_WSTR,2)(DATEPART("ss",StartTime)),2))</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input].Columns[EndTime]"
                          cachedDataType="date"
                          cachedName="End Time"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          name="EndTime"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">((DT_STR,8,1252)[RIGHT]("0" + (DT_WSTR,2)([DATEPART]("hh",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]})),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)([DATEPART]("mi",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]})),2) + ":" + [RIGHT]("0" + (DT_WSTR,2)([DATEPART]("ss",#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]})),2))</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">((DT_STR,8,1252)RIGHT("0" + (DT_WSTR,2)(DATEPART("hh",EndTime)),2) + ":" + RIGHT("0" + (DT_WSTR,2)(DATEPART("mi",EndTime)),2) + ":" + RIGHT("0" + (DT_WSTR,2)(DATEPART("ss",EndTime)),2))</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]"
                          name="ConsultantName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_WSTR,50)@[User::ConsultantNameString]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_WSTR,50)@[User::ConsultantNameString]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Timesheet</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]"
                          name="D of Week"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]"
                          name="Client"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]"
                          name="Client Project Name"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          length="4000"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]"
                          name="Total Hours"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]"
                          name="Start Time"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]"
                          name="End Time"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                          dataType="date"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[D of Week]"
                          dataType="wstr"
                          length="255"
                          name="D of Week" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client]"
                          dataType="wstr"
                          length="255"
                          name="Client" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          name="Client Project Name" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Description]"
                          dataType="wstr"
                          length="255"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          name="Billable or Non Billable" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Comments]"
                          dataType="nText"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Total Hours]"
                          dataType="date"
                          name="Total Hours" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[Start Time]"
                          dataType="date"
                          name="Start Time" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[End Time]"
                          dataType="date"
                          name="End Time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[D of Week]"
                          name="D of Week" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Client Project Name]"
                          name="Client Project Name" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          dataType="nText"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Total Hours]"
                          name="Total Hours" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant"
                  componentClassID="Microsoft.FuzzyLookup"
                  contactInfo="Fuzzy Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;5"
                  description="Performs data cleaning tasks such as standardizing data, correcting data, and providing missing values.  Uses fuzzy matching to return one or more close matches from a reference table. For example, lookup customer data by address, even if your input address data does not exactly match your reference address data."
                  name="Fuzzy Lookup Consultant"
                  version="5">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to reuse an existing fuzzy-match index table or build a new one. The new index table can be temporary, persisted, or persisted and maintained."
                      name="MatchIndexOptions"
                      typeConverter="tcMatchIndexOptions">2</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the maximum amount of memory (MB) that this instance of the Fuzzy Lookup transformation can use.  If 0 is given, then the transform will dynamically adjust it's memory usage based upon it's requirements and available system memory."
                      expressionType="Notify"
                      name="MaxMemoryUsage" />
                    <property
                      dataType="System.String"
                      description="Specifies the name of the fuzzy-match index table to be reused or the table name in which a newly generated fuzzy-match index table will be written."
                      name="MatchIndexName"
                      state="escaped">FuzzyLookupMatchIndex</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the reference table or view against which to match incoming records."
                      name="ReferenceTableName"
                      state="escaped">_x005B_dbo_x005D_._x005B_Consultant_x005D_</property>
                    <property
                      dataType="System.Int32"
                      description="Indicates whether to drop an existing fuzzy-match index table if transformation is configured to generate a new table and a table with the same name already exists."
                      name="DropExistingMatchIndex">1</property>
                    <property
                      dataType="System.Int32"
                      description="Whether a copy of the reference table should be made for fuzzy match index construction and subsequent matching.  It is strongly recommended that a copy always be made, otherwise unpredictable output may result if the contents of the reference table change during package execution (or between executions if reusing a fuzzy match index).  If this property is set to false, the reference table must additionally have a clustered index built upon an integer identity column."
                      name="CopyReferenceTable">1</property>
                    <property
                      dataType="System.UInt32"
                      description="Specifies the maximum number of fuzzy matches to return for an input record."
                      name="MaxOutputMatchesPerInput">1</property>
                    <property
                      dataType="System.Single"
                      description="Specifies the minimum similarity score required for the match results that the transformation returns."
                      name="MinSimilarity">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the set of white-space and punctuation characters used to separate fuzzy match fields into the words used for matching and scoring a fuzzy lookup."
                      name="Delimiters"
                      state="escaped">_x0020__x0009__x000D__x000A__x002C_._x003B_:-_x0022__x0027__x0026__x002F__x005C__x0040__x0021__x003F__x0028__x0029__x003C__x003E__x005B__x005D__x007B__x007D__x007C__x0023__x002A__x005E__x0025_</property>
                    <property
                      dataType="System.String"
                      description="Specifies the metadata of the reference table in XML format."
                      name="ReferenceMetadataXml"
                      state="escaped">_x003C_referenceMetadata_x003E__x003C_referenceColumns_x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantID_x0022__x0020_dataType_x003D__x0022_DT_I4_x0022__x0020_length_x003D__x0022_0_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C_referenceColumn_x0020_name_x003D__x0022_ConsultantName_x0022__x0020_dataType_x003D__x0022_DT_WSTR_x0022__x0020_length_x003D__x0022_100_x0022__x0020_precision_x003D__x0022_0_x0022__x0020_scale_x003D__x0022_0_x0022__x0020_codePage_x003D__x0022_0_x0022__x002F__x003E__x003C__x002F_referenceColumns_x003E__x003C__x002F_referenceMetadata_x003E__x000D__x000A_</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, each input record will be directly compared against EVERY record in the reference table.  This may produce slightly better results, but will be extremely slow unless the number of records in the reference table is very small.  Note that the entire reference table will be loaded into main memory if this option is enabled.  This option is primarily intended for debugging purposes and should be used with care."
                      name="Exhaustive">false</property>
                    <property
                      dataType="System.Boolean"
                      description="If true, Fuzzy Lookup will partially load the error-tolerant index and the reference table into main memory before execution begins.  This can greatly enhance performance if many input rows are to be processed."
                      name="WarmCaches">true</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Microsoft SQL Server connection and database in which the fuzzy lookup reference table is located and where the fuzzy match index table will be stored and accessed."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input]"
                      hasSideEffects="true"
                      name="Fuzzy Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Client Project Name]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client Project Name"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Description]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[Start Time]"
                          cachedDataType="date"
                          cachedName="Start Time"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[End Time]"
                          cachedDataType="date"
                          cachedName="End Time"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.UInt32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input].Columns[ConsultantName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ConsultantName"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Name of the reference table column with which the input column should be matched."
                              name="JoinToReferenceColumn"
                              state="escaped">ConsultantName</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the match is a fuzzy or an exact match."
                              name="JoinType"
                              typeConverter="tcJoinType">2</property>
                            <property
                              dataType="System.Single"
                              description="Specifies the minimum textual similarity required between input and fuzzy matched records on values in this particular join column.  Must be a floating point value between 0.0 and 1.0."
                              name="MinSimilarity">0</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the comparison options for character data. The options are those supported by the FoldString function."
                              name="FuzzyComparisonFlags"
                              typeConverter="tcComparisonFlags">1</property>
                            <property
                              dataType="System.UInt32"
                              description="Flags to FoldString that should be used when comparing whether two strings are equivalent."
                              name="FuzzyComparisonFlagsEx"
                              typeConverter="tcComparisonFlagsEx">0</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output]"
                      hasSideEffects="true"
                      name="Fuzzy Lookup Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Date]"
                          name="Date">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[D of Week]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[D of Week]"
                          name="D of Week">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[D of Week]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Client]"
                          name="Client">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Client Project Name]"
                          name="Client Project Name">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Client Project Name]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Description]"
                          name="Description">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Description]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Billable or Non Billable]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Comments]"
                          name="Comments">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Comments]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Total Hours]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Total Hours]"
                          name="Total Hours">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Total Hours]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[StartTime]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[StartTime]"
                          name="StartTime">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[Start Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[EndTime]"
                          dataType="date"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[EndTime]"
                          name="EndTime">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output].Columns[End Time]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantName]"
                          name="ConsultantName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]"
                          name="ConsultantID">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped">ConsultantID</property>
                            <property
                              containsID="true"
                              dataType="System.Null"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID" />
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          dataType="r4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Similarity]"
                          name="_Similarity">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          dataType="r4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Confidence]"
                          name="_Confidence">
                          <properties>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Similarity_ConsultantName]"
                          dataType="r4"
                          description="Column-level similarity score for fuzzy join on column &quot;ConsultantName&quot;."
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[_Similarity_ConsultantName]"
                          name="_Similarity_ConsultantName">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="Specifies the reference table column that is copied to the output for each match result."
                              name="CopyFromReferenceColumn"
                              state="escaped" />
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the lineage identifier of the input column from which to copy to this output column for each match."
                              name="SourceInputColumnLineageID">#{Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output].Columns[ConsultantName]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies whether the column is used to indicate confidence or similarity."
                              name="ColumnType"
                              typeConverter="tcColumnType">3</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup Client"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_WSTR" length="100" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Client]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Inputs[Lookup Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Client]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Match Output].Columns[ClientID]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Match Output].Columns[ClientID]"
                          name="ClientID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ClientID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Timesheet]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Comments"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Comments]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StartTime]"
                          cachedDataType="date"
                          cachedName="StartTime"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[StartTime]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EndTime]"
                          cachedDataType="date"
                          cachedName="EndTime"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[EndTime]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ConsultantID]"
                          cachedDataType="i4"
                          cachedName="ConsultantID"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[ConsultantID]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientID]"
                          cachedDataType="i4"
                          cachedName="ClientID"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Match Output].Columns[ClientID]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntryDate]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[D of Week]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="D of Week"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[D of Week]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BillableStatus]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Hours]"
                          cachedDataType="date"
                          cachedName="Total Hours"
                          externalMetadataColumnId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output].Columns[Total Hours]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TimesheetID]"
                          dataType="i4"
                          name="TimesheetID" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EntryDate]"
                          dataType="dbDate"
                          name="EntryDate" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          dataType="wstr"
                          length="10"
                          name="DayOfWeek" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          dataType="wstr"
                          length="500"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[BillableStatus]"
                          dataType="wstr"
                          length="20"
                          name="BillableStatus" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          dataType="wstr"
                          length="1000"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          dataType="dbTime2"
                          name="TotalHours"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          dataType="dbTime2"
                          name="StartTime"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          dataType="dbTime2"
                          name="EndTime"
                          scale="7" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Derived Column Output]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Inputs[Conditional Split Input]"
                  name="Derived Column Output"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Excel Source Output]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Fuzzy Lookup Output]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Inputs[Lookup Input]"
                  name="Fuzzy Lookup Output"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Outputs[Fuzzy Lookup Output]" />
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Lookup Match Output]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Lookup Match Output"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[ValidRows]"
                  endId="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant.Inputs[Fuzzy Lookup Input]"
                  name="ValidRows"
                  startId="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split.Outputs[ValidRows]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Loop Through Excel Files\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{15CF86EE-592B-4235-B85A-E47A72D2037D}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_dd37cea298374cf5883bc431ca752e8c"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FilePath,User::FolderPath">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_dd37cea298374cf5883bc431ca752e8c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            string path = Dts.Variables["User::FilePath"].Value.ToString();
            MessageBox.Show("Found file:\n" + path);

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dd37cea298374cf5883bc431ca752e8c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dd37cea298374cf5883bc431ca752e8c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dd37cea298374cf5883bc431ca752e8c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_dd37cea298374cf5883bc431ca752e8c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_dd37cea298374cf5883bc431ca752e8c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_dd37cea298374cf5883bc431ca752e8c</msb:CodeName>
    <msb:DisplayName>ST_dd37cea298374cf5883bc431ca752e8c</msb:DisplayName>
    <msb:ProjectId>{149B482E-3B17-487F-8E13-92F27FB08E64}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_dd37cea298374cf5883bc431ca752e8c.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_dd37cea298374cf5883bc431ca752e8c.Properties.Settings.get_Default():ST_dd37cea298374cf5883bc431ca752e8c.Properties.Sett" +
    "ings")]

namespace ST_dd37cea298374cf5883bc431ca752e8c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_dd37cea298374cf5883bc431ca752e8c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_dd37cea298374cf5883bc431ca752e8c")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="ST_dd37cea298374cf5883bc431ca752e8c.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{05460dfd-ea54-4abd-8ce9-f210b4686585}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_dd37cea298374cf5883bc431ca752e8c</RootNamespace>
    <AssemblyName>ST_dd37cea298374cf5883bc431ca752e8c</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <BinaryItem
                Name="ST_dd37cea298374cf5883bc431ca752e8c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAC3YQmgAAAAAAAAAAOAAIiALATAAABAAAAAIAAAAAAAAKi4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANgtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAMA4AAAAgAAAAEAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAASAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAM
LgAAAAAAAEgAAAACAAUAACEAACAMAAABAAAAAAAAACAtAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgA+AAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKch8AAHAGKBUAAAooFgAACiYCKBAAAAoWbxcAAAoqHgIoGAAACioeAigZAAAKKq5+
AQAABC0ecjkAAHDQAwAAAigaAAAKbxsAAApzHAAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQq
Gn4DAAAEKh4CKB0AAAoqLnMIAAAGgAMAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAA
BQBsAAAA8AMAACN+AABcBAAAlAUAACNTdHJpbmdzAAAAAPAJAACsAAAAI1VTAJwKAAAQAAAAI0dV
SUQAAACsCgAAdAEAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACAAAAAFAAAA
BgAAAAkAAAABAAAAHQAAAAIAAAAQAAAAAQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAA
AHUDAQAAAAAABgAlAkUEBgC0AkUEBgBxATIEDwC5BAAABgCeAfMDBgAIAvMDBgDpAfMDBgCbAvMD
BgBFAvMDBgBeAvMDBgC1AfMDBgDQAeICCgB5AiQDCgDwACQDBgCtA6YDBgBUATIEBgBIBaYDBgAV
BGUEBgAFBN4DDgAkAV8DDgCFAV8DDgAMAckDBgA5AUUECgBNAyQDEgD7BJsAEgBuAJsABgD+AqYD
FgB8BQ4FFgBbBQ4FBgC7AKYDBgB3AKYDBgCLBfMDAAAAAAEAAAAAAAEAAQABABAAvgM6ADkAAQAB
AAAAEABsBMgERQABAAMAAAEQAAUFyARZAAMABwADAQAAMwUAAD0ABAAKABEAsgN0ABEA4AB4ABEA
XgB8AAYGKQCAAFaAIwWDAFaAwACDAFAgAAAAAIYAxAMGAAEAmiAAAAAAhhglBAYAAQCiIAAAAACD
GCUEBgABAKogAAAAAJMIEQSHAAEA1iAAAAAAkwjIAIwAAQDdIAAAAACTCNQAkQABAOUgAAAAAJYI
TwWXAAIA7CAAAAAAhhglBAYAAgD0IAAAAACRGCsEnAACAAAAAQDcAgkAJQQBABEAJQQGABkAJQQK
ACkAJQQQADEAJQQQADkAJQQQAEEAJQQQAEkAJQQQAFEAJQQQAFkAJQQQAGEAJQQQAGkAJQQGAIEA
JQQGAKkAJQQVALkAJQQGAHEAKwUfAMEA9wQkAMkAnQMpANEA0gIvAIkA/AIzANkAQQU3AOEAdwU9
AMEAaAUBAHEAJQQGAIkAJQQGAPEAiQBDAPEAhwVKAJEAJQRQALEAJQQGAAgAFABqAAgAGABvACkA
cwDXAC4ACwCvAC4AEwC4AC4AGwDXAC4AIwDgAC4AKwAJAS4AMwAJAS4AOwAJAS4AQwDgAC4ASwAP
AS4AUwAJAS4AWwAmAUMAYwBvAEkAcwDXAGEAewBvAGMAawBvABsAAwABAAQAAwAAABUEoAAAAOgA
pQAAAFMFqgACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAEgkZmIAAAAAAAA6AAAABAAA
AAAAAAAAAAAAWAAxAAAAAAAQAAAAAAAAAAAAAABhAAUDAAAAAAQAAAAAAAAAAAAAAFgApgMAAAAA
EAAAAAAAAAAAAAAAYQAKAAAAAAAEAAAAAAAAAAAAAABYAA4FAAAAAAAAAAABAAAAdgQAAAUAAgAA
AAAAADxNb2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29y
bGliAFNUX2RkMzdjZWEyOTgzNzRjZjU4ODNiYzQzMWNhNzUyZThjAGRlZmF1bHRJbnN0YW5jZQBW
YXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0
dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JC
cm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9u
QXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0
aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUA
U3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVyLlNj
cmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRP
YmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfZGQzN2NlYTI5ODM3NGNmNTg4M2Jj
NDMxY2E3NTJlOGMuZGxsAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24AQ3VsdHVyZUluZm8AZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTVF9kZDM3Y2VhMjk4Mzc0Y2Y1ODgzYmM0MzFjYTc1MmU4Yy5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZGQzN2NlYTI5ODM3NGNmNTg4M2JjNDMx
Y2E3NTJlOGMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN5c3RlbS5XaW5kb3dz
LkZvcm1zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABPYmplY3QAZ2V0X0Rl
ZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVzdWx0AFNob3cATWVzc2FnZUJveABnZXRfQXNz
ZW1ibHkAAB1VAHMAZQByADoAOgBGAGkAbABlAFAAYQB0AGgAABlGAG8AdQBuAGQAIABmAGkAbABl
ADoACgAAcVMAVABfAGQAZAAzADcAYwBlAGEAMgA5ADgAMwA3ADQAYwBmADUAOAA4ADMAYgBjADQA
MwAxAGMAYQA3ADUAMgBlADgAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAAJ9oieG+hPlHrcR/KvAlzZAABCABAQgDIAABBSABARERBCABAQ4FIAEBEVEDBwEOBCAA
EmEEIAASZQUgARJpHAMgABwDIAAOBQACDg4OBQABEXUOBgABEnkRfQUgABKAgQcgAgEOEoCBCLd6
XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMGERQEAAASSQQAABJNBQAB
ARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF9kZDM3Y2VhMjk4Mzc0Y2Y1ODgzYmM0MzFjYTc1MmU4
YwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABNAQAcLk5FVEZyYW1ld29yayxWZXJzaW9u
PXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUULk5FVCBGcmFtZXdvcmsgNC43LjK0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAAC4AAAAAAAAAAAAAGi4AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwuAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAA
AABIAAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBP
AAAAAAC9BO/+AAABAAAAAQBmYkgkAAABAGZiSCQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAA
RAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBv
AG4AAAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAA
MAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABh
AG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4A
AAAAAFMAVABfAGQAZAAzADcAYwBlAGEAMgA5ADgAMwA3ADQAYwBmADUAOAA4ADMAYgBjADQAMwAx
AGMAYQA3ADUAMgBlADgAYwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAA
LgA5ADIAOAA4AC4AMgA1ADEAOQAwAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAA
AFMAVABfAGQAZAAzADcAYwBlAGEAMgA5ADgAMwA3ADQAYwBmADUAOAA4ADMAYgBjADQAMwAxAGMA
YQA3ADUAMgBlADgAYwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0
AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQA
cgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBu
AGEAbQBlAAAAUwBUAF8AZABkADMANwBjAGUAYQAyADkAOAAzADcANABjAGYANQA4ADgAMwBiAGMA
NAAzADEAYwBhADcANQAyAGUAOABjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBt
AGUAAAAAAFMAVABfAGQAZAAzADcAYwBlAGEAMgA5ADgAMwA3ADQAYwBmADUAOAA4ADMAYgBjADQA
MwAxAGMAYQA3ADUAMgBlADgAYwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAA
ADEALgAwAC4AOQAyADgAOAAuADIANQAxADkAMAAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAA
VgBlAHIAcwBpAG8AbgAAADEALgAwAC4AOQAyADgAOAAuADIANQAxADkAMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAwAAAAsPgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Loop Through Excel Files.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{852AC9AC-91B2-4E80-9F7C-2FB0BA6C6416}"
          DTS:From="Package\Loop Through Excel Files\MigratingTimeSheet"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Loop Through Excel Files\Data Flow Task Leave TBL" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{69A6EDAF-A777-43EE-AD1C-C3EB3F2E348D}"
          DTS:ObjectName="{69A6EDAF-A777-43EE-AD1C-C3EB3F2E348D}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DD6BE829-E4E4-486D-98BC-1CA133A8C64C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{FA2A9534-314E-42F6-9CAB-4C8F8D4FF846}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task Extracting Client"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{557ce6fd-a721-4bfd-b769-45d60024e93d}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task Extracting Client"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Key$B2:B40]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 3]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 3]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB 2]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB 2]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Output].Columns[F1]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          dataType="wstr"
                          length="100"
                          name="ClientName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\Data Flow Task Extracting Client.Paths[Excel Source Output]"
                  endId="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Excel Source Output"
                  startId="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Data Flow Task Extracting Consultant"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{025feb8d-4a8b-4bd9-98ec-5071ae6dff22}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task Extracting Consultant"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [Key$H2:H72]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager 1 1]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager 1 1]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Output].Columns[Resource]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Output].ExternalColumns[Resource]"
                          length="255"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Output].Columns[Resource]"
                          name="Resource"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Output].ExternalColumns[Resource]"
                          dataType="wstr"
                          length="255"
                          name="Resource" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Error Output].Columns[Resource]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Error Output].Columns[Resource]"
                          name="Resource" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Consultant]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      connectionManagerRefId="Package.ConnectionManagers[LocalHost.TimesheetDB]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Resource]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Resource"
                          externalMetadataColumnId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantName]"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Output].Columns[Resource]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantID]"
                          dataType="i4"
                          name="ConsultantID" />
                        <externalMetadataColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ConsultantName]"
                          dataType="wstr"
                          length="100"
                          name="ConsultantName" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Sequence Container\Data Flow Task Extracting Consultant.Paths[Excel Source Output]"
                  endId="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Excel Source Output"
                  startId="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{4C4991C5-2CCD-421F-9C6E-9A329470CBA1}"
          DTS:From="Package\Sequence Container\Data Flow Task Extracting Client"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Data Flow Task Extracting Consultant" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{9D5A2499-BBD7-4062-BBA6-90FFD8F22850}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Loop Through Excel Files" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="203.2,41.6"
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL"
          TopLeft="17.3666615216271,155.066667040321" />
        <NodeLayout
          Size="172,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet"
          TopLeft="58.9333249555694,80.7333316759929" />
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Loop Through Excel Files\Script Task"
          TopLeft="64.9666566042442,5.79999911407627" />
        <EdgeLayout
          Id="Package\Loop Through Excel Files.PrecedenceConstraints[Constraint]"
          TopLeft="144.933324955569,122.333331675993">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-25.9666634339422,32.7333353643285"
              Start="0,0"
              End="-25.9666634339422,25.2333353643285">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.3666676821643" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.3666676821643"
                    Point2="0,16.3666676821643"
                    Point3="-4,16.3666676821643" />
                  <mssgle:LineSegment
                    End="-21.9666634339422,16.3666676821643" />
                  <mssgle:CubicBezierSegment
                    Point1="-21.9666634339422,16.3666676821643"
                    Point2="-25.9666634339422,16.3666676821643"
                    Point3="-25.9666634339422,20.3666676821643" />
                  <mssgle:LineSegment
                    End="-25.9666634339422,25.2333353643285" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="271.2,328.8"
          Size="271.2,372"
          Id="Package\Loop Through Excel Files"
          TopLeft="82.4999954923993,40.2000014283263" />
        <NodeLayout
          Size="228.8,41.6"
          Id="Package\Sequence Container\Data Flow Task Extracting Client"
          TopLeft="21.9999743203333,6.19999929487706" />
        <NodeLayout
          Size="252,41.6"
          Id="Package\Sequence Container\Data Flow Task Extracting Consultant"
          TopLeft="20.3333077447295,86.7999987343947" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="136.399974320333,47.7999992948771">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.93333342439618,38.9999994395176"
              Start="0,0"
              End="9.93333342439618,31.4999994395176">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.4999997197588" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.4999997197588"
                    Point2="0,19.4999997197588"
                    Point3="4,19.4999997197588" />
                  <mssgle:LineSegment
                    End="5.93333342439618,19.4999997197588" />
                  <mssgle:CubicBezierSegment
                    Point1="5.93333342439618,19.4999997197588"
                    Point2="9.93333342439618,19.4999997197588"
                    Point3="9.93333342439618,23.4999997197588" />
                  <mssgle:LineSegment
                    End="9.93333342439618,31.4999994395176" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="150.4,41.6"
          Id="Package\Sequence Container\Data Flow Task"
          TopLeft="80.9999691297623,146.733331639833" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="297.6,243.2"
          Size="297.6,286.4"
          Id="Package\Sequence Container"
          TopLeft="484.166640212967,53.7333329596785" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="484.166640212967,196.933332959678">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-130.466644720568,29.2666684686478"
              Start="0,0"
              End="-122.966644720568,29.2666684686478">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-61.2333223602839,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-61.2333223602839,0"
                    Point2="-65.2333223602839,0"
                    Point3="-65.2333223602839,4" />
                  <mssgle:LineSegment
                    End="-65.2333223602839,25.2666684686478" />
                  <mssgle:CubicBezierSegment
                    Point1="-65.2333223602839,25.2666684686478"
                    Point2="-65.2333223602839,29.2666684686478"
                    Point3="-69.2333223602839,29.2666684686478" />
                  <mssgle:LineSegment
                    End="-122.966644720568,29.2666684686478" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Loop Through Excel Files\Data Flow Task Leave TBL">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Derived Column"
          TopLeft="217.999998539687,217.99999747475" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source"
          TopLeft="24.9999986340598,34.666666425599" />
        <NodeLayout
          Size="195.2,41.6"
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant"
          TopLeft="34.9999917298563,283.266665014757" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Conditional Split"
          TopLeft="259.999987763663,33.700000344316" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL\OLE DB Destination"
          TopLeft="248.333324136006,384.333331670032" />
        <EdgeLayout
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL.Paths[Excel Source Output]"
          TopLeft="164.99999863406,54.9833333849575">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="94.9999891296034,0"
              Start="0,0"
              End="87.4999891296034,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="87.4999891296034,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL.Paths[Derived Column Output]"
          TopLeft="294.399998539687,259.59999747475">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-161.80000680983,23.6666675400065"
              Start="0,0"
              End="-161.80000680983,16.1666675400065">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,7.83333377000324" />
                  <mssgle:CubicBezierSegment
                    Point1="0,7.83333377000324"
                    Point2="0,11.8333337700032"
                    Point3="-4,11.8333337700032" />
                  <mssgle:LineSegment
                    End="-157.80000680983,11.8333337700032" />
                  <mssgle:CubicBezierSegment
                    Point1="-157.80000680983,11.8333337700032"
                    Point2="-161.80000680983,11.8333337700032"
                    Point3="-161.80000680983,15.8333337700032" />
                  <mssgle:LineSegment
                    End="-161.80000680983,16.1666675400065" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL.Paths[Fuzzy Lookup Output]"
          TopLeft="132.599991729856,324.866665014757">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="201.333332406149,59.4666666552753"
              Start="0,0"
              End="201.333332406149,51.9666666552753">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.7333333276377" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.7333333276377"
                    Point2="0,29.7333333276377"
                    Point3="4,29.7333333276377" />
                  <mssgle:LineSegment
                    End="197.333332406149,29.7333333276377" />
                  <mssgle:CubicBezierSegment
                    Point1="197.333332406149,29.7333333276377"
                    Point2="201.333332406149,29.7333333276377"
                    Point3="201.333332406149,33.7333333276377" />
                  <mssgle:LineSegment
                    End="201.333332406149,51.9666666552753" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\Data Flow Task Leave TBL.Paths[Case 1]"
          TopLeft="336.799987763663,75.300000344316">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-42.3999892239764,142.699997130434"
              Start="0,0"
              End="-42.3999892239764,135.199997130434">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,67.3499985652172" />
                  <mssgle:CubicBezierSegment
                    Point1="0,67.3499985652172"
                    Point2="0,71.3499985652172"
                    Point3="-4,71.3499985652172" />
                  <mssgle:LineSegment
                    End="-38.3999892239764,71.3499985652172" />
                  <mssgle:CubicBezierSegment
                    Point1="-38.3999892239764,71.3499985652172"
                    Point2="-42.3999892239764,71.3499985652172"
                    Point3="-42.3999892239764,75.3499985652172" />
                  <mssgle:LineSegment
                    End="-42.3999892239764,135.199997130434" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-36.4180805494882,76.3499985652172,30.436171875,9.5537109375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Fuzzy Lookup Consultant">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\Data Flow Task Leave TBL\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="141.6,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client"
          TopLeft="422.499986452361,242.066664967471" />
        <NodeLayout
          Size="195.2,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant"
          TopLeft="436.999987925093,137.333332457808" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination"
          TopLeft="57.3333360047805,404.299997834762" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source"
          TopLeft="18.8333326048322,21.9666665521595" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\Derived Column"
          TopLeft="259.6666494194,31.1333320360056" />
        <NodeLayout
          Size="153.6,41.6"
          Id="Package\Loop Through Excel Files\MigratingTimeSheet\Conditional Split"
          TopLeft="448.333306254613,45.7999986563129" />
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Fuzzy Lookup Output]"
          TopLeft="534.599987925093,178.933332457808">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-41.3000014727318,63.1333325096631"
              Start="0,0"
              End="-41.3000014727318,55.6333325096631">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5666662548315" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.5666662548315"
                    Point2="0,31.5666662548315"
                    Point3="-4,31.5666662548315" />
                  <mssgle:LineSegment
                    End="-37.3000014727318,31.5666662548315" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.3000014727318,31.5666662548315"
                    Point2="-41.3000014727318,31.5666662548315"
                    Point3="-41.3000014727318,35.5666662548315" />
                  <mssgle:LineSegment
                    End="-41.3000014727318,55.6333325096631" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Excel Source Output]"
          TopLeft="158.833332604832,42.7666665521595">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="100.833316814568,9.16666548384607"
              Start="0,0"
              End="93.3333168145679,9.16666548384607">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="46.416658407284,0" />
                  <mssgle:CubicBezierSegment
                    Point1="46.416658407284,0"
                    Point2="50.416658407284,0"
                    Point3="50.416658407284,4" />
                  <mssgle:LineSegment
                    End="50.416658407284,5.16666548384607" />
                  <mssgle:CubicBezierSegment
                    Point1="50.416658407284,5.16666548384607"
                    Point2="50.416658407284,9.16666548384607"
                    Point3="54.416658407284,9.16666548384607" />
                  <mssgle:LineSegment
                    End="93.3333168145679,9.16666548384607" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Derived Column Output]"
          TopLeft="412.4666494194,51.9333320360056">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="35.8666568352129,14.6666666203073"
              Start="0,0"
              End="28.3666568352129,14.6666666203073">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="13.9333284176064,0" />
                  <mssgle:CubicBezierSegment
                    Point1="13.9333284176064,0"
                    Point2="17.9333284176064,0"
                    Point3="17.9333284176064,4" />
                  <mssgle:LineSegment
                    End="17.9333284176064,10.6666666203073" />
                  <mssgle:CubicBezierSegment
                    Point1="17.9333284176064,10.6666666203073"
                    Point2="17.9333284176064,14.6666666203073"
                    Point3="21.9333284176064,14.6666666203073" />
                  <mssgle:LineSegment
                    End="28.3666568352129,14.6666666203073" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[Lookup Match Output]"
          TopLeft="493.299986452361,283.666664967471">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-350.366650447581,120.633332867291"
              Start="0,0"
              End="-350.366650447581,113.133332867291">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.3166664336456" />
                  <mssgle:CubicBezierSegment
                    Point1="0,56.3166664336456"
                    Point2="0,60.3166664336456"
                    Point3="-4,60.3166664336456" />
                  <mssgle:LineSegment
                    End="-346.366650447581,60.3166664336456" />
                  <mssgle:CubicBezierSegment
                    Point1="-346.366650447581,60.3166664336456"
                    Point2="-350.366650447581,60.3166664336456"
                    Point3="-350.366650447581,64.3166664336456" />
                  <mssgle:LineSegment
                    End="-350.366650447581,113.133332867291" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-223.37471194254,65.3166664336456,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Loop Through Excel Files\MigratingTimeSheet.Paths[ValidRows]"
          TopLeft="525.133306254613,87.3999986563129">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9.46668167048017,49.9333338014947"
              Start="0,0"
              End="9.46668167048017,42.4333338014947">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.9666669007473" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.9666669007473"
                    Point2="0,24.9666669007473"
                    Point3="4,24.9666669007473" />
                  <mssgle:LineSegment
                    End="5.46668167048017,24.9666669007473" />
                  <mssgle:CubicBezierSegment
                    Point1="5.46668167048017,24.9666669007473"
                    Point2="9.46668167048017,24.9666669007473"
                    Point3="9.46668167048017,28.9666669007473" />
                  <mssgle:LineSegment
                    End="9.46668167048017,42.4333338014947" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-147.117418968711,60.4666664462619,46.7015234375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet\Lookup Client">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[Client]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet\Fuzzy Lookup Consultant">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Loop Through Excel Files\MigratingTimeSheet\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\Data Flow Task Extracting Client">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination"
          TopLeft="79.1666623411909,154.266665593916" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source"
          TopLeft="34.9999980876843,19.0666665340794" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task Extracting Client.Paths[Excel Source Output]"
          TopLeft="104.999998087684,60.6666665340794">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.7666642535066,93.5999990598362"
              Start="0,0"
              End="59.7666642535066,86.0999990598362">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.7999995299181" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.7999995299181"
                    Point2="0,46.7999995299181"
                    Point3="4,46.7999995299181" />
                  <mssgle:LineSegment
                    End="55.7666642535066,46.7999995299181" />
                  <mssgle:CubicBezierSegment
                    Point1="55.7666642535066,46.7999995299181"
                    Point2="59.7666642535066,46.7999995299181"
                    Point3="59.7666642535066,50.7999995299181" />
                  <mssgle:LineSegment
                    End="59.7666642535066,86.0999990598362" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task Extracting Client\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task Extracting Client\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Sequence Container\Data Flow Task Extracting Consultant">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination"
          TopLeft="213.999996811152,142.999997869134" />
        <NodeLayout
          Size="140,41.6"
          Id="Package\Sequence Container\Data Flow Task Extracting Consultant\Excel Source"
          TopLeft="218.333321404126,31.1999997830391" />
        <EdgeLayout
          Id="Package\Sequence Container\Data Flow Task Extracting Consultant.Paths[Excel Source Output]"
          TopLeft="288.333321404126,72.7999997830391">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11.2666754070257,70.1999980860949"
              Start="0,0"
              End="11.2666754070257,62.6999980860949">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.0999990430474" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.0999990430474"
                    Point2="0,35.0999990430474"
                    Point3="4,35.0999990430474" />
                  <mssgle:LineSegment
                    End="7.26667540702567,35.0999990430474" />
                  <mssgle:CubicBezierSegment
                    Point1="7.26667540702567,35.0999990430474"
                    Point2="11.2666754070257,35.0999990430474"
                    Point3="11.2666754070257,39.0999990430474" />
                  <mssgle:LineSegment
                    End="11.2666754070257,62.6999980860949" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Sequence Container\Data Flow Task Extracting Consultant\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>